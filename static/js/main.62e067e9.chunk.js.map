{"version":3,"sources":["utils/usePromise.ts","utils/useTrigger.ts","utils/blogdata.ts","BlogData.tsx","PageDispatcher.tsx","pages/WIP.tsx","components/Header.tsx","components/Root.tsx","components/RawElement.tsx","pages/Splash.tsx","pages/Home.tsx","pages/PostsList.tsx","pages/Message.tsx","components/Comment.tsx","pages/Post.tsx","App.tsx","index.tsx"],"names":["reducer","state","action","type","error","undefined","result","payload","usePromise","promise","inputs","useReducer","dispatch","useState","value","setValue","useTrigger","triggerToken","trigger","useEffect","_promise","resolvePromise","canceled","then","_result","_error","cb","useCallback","data","retry","firstLoad","fetchBlogData","url","a","document","location","pathname","html","getElementsByTagName","innerHTML","fetch","redirect","resp","text","parseBlogData","el","createElement","title","querySelector","textContent","trim","blogData","context","extractContent","head","nav","extractNav","pagination","extractPagination","content","element","seo","findSEONodesInHead","nodes","i","childNodes","length","nodeType","nodeValue","push","Array","from","querySelectorAll","map","e","name","href","getAttribute","icon","split","filter","test","replace","pages","current","classList","contains","Boolean","className","defaultBlogData","BlogContext","React","createContext","useBlogData","useContext","LoadingStateContext","useBlogDataLoadingState","BlogDataContext","props","useHistory","global","router","useLocation","_blogData","useMemo","loadingState","forEach","n","remove","append","Provider","children","pageTypes","fallbackPageType","component","registerPageType","page","PageDispatcher","documentElement","scrollTop","pt","PureStringCommand","PageFilterCommand","_goTo","goTo","debounce","index","_setCurrent","setCurrent","p","autocomplete","total","onClick","onChange","v","parseInt","target","virtualCommands","l","m","match","c","Header","res","f","convertUrlToVirtualCommand","style","margin","color","width","flexGrow","key","Root","RawElement","ref","elem","appendChild","extractPostInfo","id","date","description","tags","abstract","posts","Math","random","toString","substr","stopPropagation","preventDefault","t","UtterancesComments","loaded","setLoaded","loading","ResizeObserver","es","ob","contentRect","height","disconnect","observe","scriptElem","src","async","crossOrigin","setAttribute","term","PostPage","post","postInfoElement","postInfo","contentElement","parsePostContent","display","flexDirection","Fragment","require","App","BlogData","ReactDOM","render","StrictMode","getElementById","bd"],"mappings":"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","file":"static/js/main.62e067e9.chunk.js","sourcesContent":["// Author: https://github.com/bsonntag/react-use-promise\n\nimport { useEffect, useReducer, useCallback, Reducer } from 'react'\nimport { useTrigger } from './useTrigger'\n\nfunction resolvePromise<T>(promise: Promise<T> | (() => Promise<T>)): Promise<T> {\n  if (typeof promise === 'function') {\n    return promise()\n  }\n\n  return promise\n}\n\ntype State<T> = {\n    error?: undefined | any,\n    result?: undefined | T,\n    state: 'pending' | 'rejected' | 'resolved'\n}\n\ntype Action<T> = {\n    type: 'pending'\n} | {\n    type: 'rejected',\n    payload: any\n} | {\n    type: 'resolved',\n    payload: T\n}\n\nfunction reducer<T>(state: State<T> = { state: 'pending' }, action: Action<T>): State<T> {\n  switch (action.type) {\n  case 'pending':\n    return {\n      error: undefined,\n      result: state.result,\n      state: 'pending'\n    }\n  case 'resolved':\n    return {\n      error: undefined,\n      result: action.payload,\n      state: 'resolved'\n    }\n  case 'rejected':\n    return {\n      error: action.payload,\n      result: state.result,\n      state: 'rejected'\n    }\n  default:\n    return state\n  }\n}\n\nfunction usePromise<T>(promise: Promise<T> | (() => Promise<T>), inputs: any[]): {\n  data: T | undefined,\n  error: any | undefined,\n  state: 'pending' | 'rejected' | 'resolved',\n  retry: () => void\n} {\n  const [{ error, result, state }, dispatch] = useReducer<Reducer<State<T>, Action<T>>>(reducer, {\n    state: 'pending'\n  })\n  const [triggerToken, trigger] = useTrigger()\n\n  useEffect(() => {\n    const _promise = resolvePromise(promise)\n\n    if (_promise === undefined) {\n      return\n    }\n\n    let canceled = false\n\n    dispatch({ type: 'pending' })\n\n    _promise.then(\n      _result => !canceled && dispatch({\n        payload: _result,\n        type: 'resolved'\n      }),\n      _error => !canceled && dispatch({\n        payload: _error,\n        type: 'rejected'\n      })\n    )\n\n    return () => {\n      canceled = true\n    }\n  }, [...inputs, triggerToken]) // eslint-disable-line react-hooks/exhaustive-deps\n\n  const cb = useCallback(() => {\n    if (state !== 'pending') trigger()\n  }, [trigger, state])\n\n  return {\n    data: result,\n    error,\n    state,\n    retry: cb\n  }\n}\n\nexport { usePromise }","import { useState } from 'react'\n\nexport function useTrigger(): [boolean, () => void] {\n  const [value, setValue] = useState(true)\n  return [value, () => { setValue(!value) }]\n}\n","export type Nav = {\n  name: string,\n  href: string,\n  icon: string\n}\n\nexport type Page = {\n  name: string,\n  href: string,\n  current: boolean\n}\n\nexport type BlogData = {\n  title: string,\n  nav?: Nav[],\n  pagination?: Page[],\n  content?: Element,\n  type: string,\n  seo: {\n    nodes: ChildNode[]\n  }\n}\n\nlet firstLoad = true\nexport async function fetchBlogData(url: string): Promise<BlogData> {\n  let html: string\n  if (firstLoad && url === document.location.pathname) {\n    html = document.getElementsByTagName('html')[0].innerHTML\n  } else {\n    const resp = await fetch(url, { \n      redirect: 'follow'\n    })\n    html = await resp.text()\n  }\n  firstLoad = false\n\n  return await parseBlogData(html)\n}\n\nexport async function parseBlogData(html: string): Promise<BlogData> {\n  const el = document.createElement('html')\n  el.innerHTML = html\n  const title = el.querySelector('head > title')?.textContent?.trim() || ''\n  const blogData = el.querySelector('[id=blog-data]') || document.createElement('div')\n  const context = extractContent(blogData)\n  const head = el.querySelector('head')\n\n  return {\n    title,\n    nav: extractNav(blogData),\n    pagination: extractPagination(blogData),\n    content: context?.element,\n    type: context?.type || 'empty',\n    seo: head ? findSEONodesInHead(head) : { nodes: [] }\n  }\n}\n\nexport function findSEONodesInHead(head: Element) {\n  let nodes: ChildNode[] = []\n\n  let i = 0;\n  while (\n    i < head.childNodes.length &&\n    !(head.childNodes[i].nodeType === 8 && head.childNodes[i].nodeValue === 'SEO_BEGIN')\n  ) { ++i }\n\n  while (\n    i < head.childNodes.length &&\n    !(head.childNodes[i].nodeType === 8 && head.childNodes[i].nodeValue === 'SEO_END')\n  ) {\n    nodes.push(head.childNodes[i])\n    ++i\n  }\n  if (i !== head.childNodes.length) nodes.push(head.childNodes[i])\n\n  return { nodes };\n}\n\nfunction extractNav(element: Element): Nav[] | undefined {\n  const nav = Array.from(element.querySelectorAll('#blog-data-nav > ul > li > a'))\n    .map(e => ({\n      name: e.textContent,\n      href: e.getAttribute('href'),\n      icon: (\n        (e.getAttribute('class') || '')\n          .split(' ')\n          .filter((e) => /^icon-/.test(e))[0] || 'icon-default'\n      ).replace(/^icon-/, '')\n    } as Nav))\n\n  if (nav.length === 0) return\n  return nav\n}\n\nfunction extractPagination(element: Element): Page[] | undefined {\n  const pages = Array.from(element.querySelectorAll('#blog-data-page-pagination > ul > li > a'))\n    .map((e) => {\n      let current: boolean\n      if (e.classList.contains('pagination-pager-current')) {\n        current = true\n      } else if (e.classList.contains('pagination-pager')) {\n        current = false\n      } else {\n        return undefined\n      }\n\n      return {\n        name: e.textContent,\n        href: e.getAttribute('href') || '#',\n        current\n      } as Page\n    })\n    .filter(Boolean) as Page[]\n\n  if (pages.length === 0) {\n    return\n  }\n\n  return pages\n}\n\nfunction extractContent(element: Element) {\n  const e = element.querySelector('#blog-data-content > div')\n  if (!e) return\n  \n  return {\n    type: e.className,\n    element: e\n  }\n}","import React, { useContext, useMemo, useEffect } from 'react'\nimport { useHistory, useLocation } from \"react-router-dom\"\nimport { fetchBlogData, usePromise, BlogData, findSEONodesInHead } from './utils'\n\nconst defaultBlogData: BlogData = { title: 'loading', type: 'splash', seo: { nodes: [] } }\nconst BlogContext = React.createContext<BlogData>(defaultBlogData)\nexport function useBlogData() { return useContext(BlogContext) }\n\nconst defaultLoadingState = {\n  state: 'resolved' as 'pending' | 'rejected' | 'resolved',\n  retry: () => {}\n}\nconst LoadingStateContext = React.createContext(defaultLoadingState)\nexport function useBlogDataLoadingState() { return useContext(LoadingStateContext) }\n\nexport default function BlogDataContext(props: { children: React.ReactNode }) {\n  const { push } = useHistory(); (global as any).router = push\n  const { pathname } = useLocation()\n  const { data: _blogData, state, retry } = usePromise(async () => fetchBlogData(pathname), [pathname])\n  const blogData = useMemo(() => _blogData || defaultBlogData, [_blogData])\n  const loadingState = useMemo(() => {\n    return {\n      state,\n      retry\n    }\n  }, [state, retry])\n\n  useEffect(() => {\n    findSEONodesInHead(document.head).nodes.forEach(n => n.remove())\n    document.head.append(...blogData.seo.nodes)\n  }, [blogData])\n\n  return (\n    <BlogContext.Provider value={blogData}>\n      <LoadingStateContext.Provider value={loadingState}>\n        {props.children}\n      </LoadingStateContext.Provider>\n    </BlogContext.Provider>\n  )\n}\n","import React, { ComponentType, ReactNode, useEffect } from 'react'\nimport { useBlogData } from './BlogData'\n\nexport { useBlogData }\n\nfunction DefaultFallbackPage () {\n  const { type } = useBlogData()\n  return <div>cannot recognize the page type: {type}</div>\n}\n\ntype PageType = {\n  type: string,\n  component: ComponentType\n}\nconst pageTypes: PageType[] = []\nconst fallbackPageType: PageType = {\n  type: 'fallback',\n  component: DefaultFallbackPage\n}\nexport function registerPageType(page: PageType) {\n  if (page.type === 'fallback') {\n    fallbackPageType.component = page.component\n  } else {\n    pageTypes.push(page)\n  }\n}\n\nexport default function PageDispatcher() {\n  const blogData = useBlogData()\n  useEffect(() => { document.documentElement.scrollTop = 0 }, [blogData])\n\n  let page: ReactNode \n  for (const pt of pageTypes) {\n    if (pt.type === blogData.type) {\n      page = <pt.component />\n      break\n    }\n  }\n  if (page === undefined) {\n    page = <fallbackPageType.component />\n  }\n\n  return <>{page}</>\n}\n","import React from 'react'\nimport { registerPageType } from '../PageDispatcher'\n\nfunction WIPPage() {\n  return <div>WIP</div>\n}\n\nregisterPageType({\n  type: 'fallback',\n  component: WIPPage\n})\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { useBlogData, useBlogDataLoadingState } from '../BlogData'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport debounce from 'lodash/debounce'\nimport './Header.scss'\n\nfunction PureStringCommand(props: {text: string}) {\n  return <span className=\"command\">{props.text}</span>\n}\n\nfunction PageFilterCommand(props: {page: number}) {\n  const { pagination } = useBlogData()\n\n  const { push: _goTo } = useHistory()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const goTo = useCallback(debounce((index: number) => {\n    if (pagination === undefined) return\n    if (index < 1) return\n    if (index > pagination.length) return\n    _goTo(pagination[index - 1].href)\n  }, 500), [_goTo, pagination])\n\n  const [current, _setCurrent] = useState<number>(props.page)\n  const setCurrent = useCallback((p: number) => {\n    if (1 <= p && p <= (pagination || []).length)\n      _setCurrent(p)\n  }, [_setCurrent, pagination])\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  useEffect(() => goTo(current), [current])\n\n  let autocomplete = <></>\n  if (pagination !== undefined) {\n    const total = pagination.length\n    autocomplete = <span className=\"auto-complete\">\n      &nbsp;of {total}\n      &nbsp;\n      <span className=\"page-btns\">\n        (\n        <a\n          onClick={() => setCurrent(current - 1)}\n          className={`page-btn ${current === 1 ? \"disabled\" : \"\"}`}\n        >prev</a>,&nbsp;\n        <a\n          onClick={() => setCurrent(current + 1)}\n          className={`page-btn ${current === total ? \"disabled\" : \"\"}`}\n        >next</a>\n        )\n      </span>\n    </span>\n  }\n\n  return <span className=\"pager command\">\n    page&nbsp;\n    <input\n      value={current}\n      onChange={v => setCurrent(parseInt(v.target.value))}\n      type=\"number\"\n    />\n    {autocomplete}\n  </span>\n}\n\ntype Location = {\n  pathname: string\n}\n\nconst virtualCommands = [\n  // /\n  l => {\n    if (l.pathname === '/') return <PureStringCommand text='screenfetch' />\n  },\n  // /posts /posts/:num\n  l => {\n    let m = l.pathname.match(/^\\/posts(?:|\\/(\\d*))\\/?$/)\n    if (m === null) return\n    let page = parseInt(m[1] || '1')\n    return <>\n      <PureStringCommand text='ls /posts' />\n      <PageFilterCommand page={page} />\n    </>\n  },\n  // /posts/:string\n  l => {\n    let m = l.pathname.match(/^\\/posts\\/([^/]{1,})\\/?$/)\n    if (m === null) return\n    return <PureStringCommand text={`open /posts/${m[1]}`} />\n  },\n  // /tag/:string\n  l => {\n    let m = l.pathname.match(/^\\/tag\\/([^/]{1,})\\/?$/)\n    if (m === null) return\n    return <>\n      <PureStringCommand text={`ls /posts`} />\n      <PureStringCommand text={`filter --tag='${m[1]}'`} />\n    </>\n  },\n  // /*\n  l => {\n    let c = 'cat ' + l.pathname.replace(/\\/$/, '').replace(/\\.[^./]*/, '')\n    return <PureStringCommand text={c} />\n  }\n] as ((locaction: Location) => React.ReactNode | undefined)[]\n\nfunction convertUrlToVirtualCommand(location: Location): React.ReactNode {\n  let res: React.ReactNode = undefined\n  for (let f of virtualCommands) {\n    res = f(location)\n    if (res !== undefined) return res\n  }\n}\n\nexport default function Header(props: {\n  className?: string\n}) {\n  const blogData = useBlogData()\n  const { state, retry } = useBlogDataLoadingState()\n  const { push: goTo } = useHistory()\n  const { pathname } = useLocation()\n\n  return <div className={`terminal-nav blog-header ${props.className || ''}`}>\n    <div className=\"command-line\">\n      <span className={`ps1 ${state}`} onClick={() => {\n        if (state === 'rejected') {\n          retry()\n        } else {\n          goTo('/')\n        }\n      }} />\n      <span className=\"command-pipeline\">\n        {convertUrlToVirtualCommand({pathname})}\n      </span>\n      { state === 'pending' && <span\n        style={{\n          margin: '0 0.3em',\n          color: 'var(--secondary-color)'\n        }}\n      >...</span> }\n    </div>\n    <nav className=\"terminal-menu\" style={{\n      width: 'auto',\n      flexGrow: 1\n    }}>\n      <ul>\n        {(blogData.nav ?? []).map(n => <li key={n.name}>\n          <a\n            className=\"menu-item\"\n            onClick={() => { goTo(n.href) }}\n          >{n.name}</a>\n        </li>)}\n      </ul>\n    </nav>\n  </div>\n}","import React from 'react'\nimport Header from './Header'\nimport './Root.scss'\n\ntype HeaderProps = {\n  children: React.ReactNode\n}\n\nexport default function Root(props: HeaderProps) {\n  return <div className=\"blog-root-page\">\n    <div className=\"header-box\">\n      <Header className=\"header\"/>\n    </div>\n    <div className=\"page\">\n      <div className=\"content\">\n        {props.children}\n      </div>\n    </div>\n  </div>\n}\n","import React from 'react'\n\n// TODO: exec <script>\nexport default function RawElement(props: {\n  element: Element,\n  className?: string,\n  style?: React.CSSProperties\n}) {\n  return <div\n    className={props.className}\n    style={props.style}\n    ref={elem => {\n      if (!elem) return\n      elem.appendChild(props.element)\n    }}\n  />\n}\n","import React from 'react'\nimport { registerPageType } from '../PageDispatcher'\n\nfunction EmptyPage() {\n  return <></>\n}\n\nregisterPageType({\n  type: 'splash',\n  component: EmptyPage\n})","import React, { useMemo } from 'react'\nimport { useBlogData } from '@/BlogData'\nimport { registerPageType } from '@/PageDispatcher'\nimport Raw from '@/components/RawElement'\n\nfunction HomePage() {\n  const data = useBlogData()\n  const content = useMemo(() => {\n    let m = data.content?.querySelector('.message')\n    return m\n  }, [data.content])\n\n  return <>\n    {content && <Raw element={content} />}\n  </>\n}\n\nregisterPageType({\n  type: 'home',\n  component: HomePage\n})","import React, { useMemo } from 'react'\nimport { useBlogData } from '@/BlogData'\nimport { registerPageType } from '@/PageDispatcher'\nimport { useHistory } from 'react-router-dom'\nimport './PostsList.scss'\n\ntype PostInfo = {\n  id: string,\n  title: string,\n  href: string,\n  date: string,\n  abstract: string,\n  tags: {\n    name: string,\n    href: string\n  }[]\n}\n\nexport function extractPostInfo (e: Element): PostInfo | undefined {\n  let id = e.querySelector('.post-id')\n  if (!(id && id.textContent)) return\n  let title = e.querySelector('a.post-title')\n  let date = e.querySelector('.post-date')\n  let description = e.querySelector('.post-description')\n  let tags = Array.from(e.querySelectorAll('.post-tags > li > a.post-tag'))\n\n  return {\n    id: id.textContent,\n    title: title?.textContent?.trim() || '',\n    href: title?.getAttribute('href') || '#',\n    date: date?.textContent || '',\n    abstract: description?.textContent || '',\n    tags: tags.map(e => ({\n      name: e.textContent || '',\n      href: e.getAttribute('href') || '#'\n    })),\n  }\n}\n\nfunction extractPostList (e: Element): PostInfo[] {\n  let es = Array.from(e.querySelectorAll('ul.posts-list > li'))\n  return es.map(p => {\n    let res = extractPostInfo(p)\n    \n    return res || {\n      id: `ERROR${Math.random().toString().substr(2, 10)}`,\n      title: 'ERROR',\n      href: '#',\n      date: '',\n      abstract: '',\n      tags: []\n    }\n  })\n}\n\nfunction PostsListPage() {\n  const { content } = useBlogData()\n  const { push: goTo } = useHistory()\n  const posts = useMemo(() => {\n    if (content) return extractPostList(content)\n    else return []\n  }, [content])\n\n  return (\n    <div className=\"posts-list\">\n      {posts.map(p => (\n        <div className=\"post-item\" key={p.href}>\n          <div className=\"title-line\">\n            <span className=\"date\">\n              {p.date}\n            </span>\n            <a href={p.href} onClick={(e) => {\n              goTo(p.href)\n              e.stopPropagation()\n              e.preventDefault()\n            }} className=\"title\">{p.title.trim()}</a>\n            <div className=\"tags-group\">\n              {p.tags.map(t => (<span className=\"tag-box\" key={t.href}>\n                <a\n                  className=\"tag\"\n                  href={t.href}\n                  onClick={(e) => {\n                    e.stopPropagation()\n                    e.preventDefault()\n                    goTo(t.href)\n                  }}\n                >{t.name}</a>\n              </span>))}\n            </div>\n          </div>\n          <div className=\"abstract\">\n            {p.abstract}\n          </div>\n        </div>\n      ))}\n    </div>\n  )\n}\n\nregisterPageType({\n  type: 'posts-list',\n  component: PostsListPage\n})\n","import React, { useMemo } from 'react'\nimport { useBlogData } from '@/BlogData'\nimport { registerPageType } from '@/PageDispatcher'\nimport Raw from '@/components/RawElement'\n\nfunction MessagePage() {\n  const data = useBlogData()\n  const content = useMemo(() => {\n    let m = data.content?.querySelector('.message')\n    return m\n  }, [data.content])\n\n  return <>\n    { content && <Raw element={content} /> }\n  </>\n}\n\nregisterPageType({\n  type: 'message',\n  component: MessagePage\n})\n","import React, { useState, ReactNode, CSSProperties } from 'react'\nimport './Comment.scss'\n\n// Original author: https://github.com/utterance/utterances/issues/161#issuecomment-550991248\nexport const UtterancesComments = (props: {\n  term: string,\n  loading?: ReactNode,\n  className?: string,\n  style?: CSSProperties\n}) => {\n  const [loaded, setLoaded] = useState(false)\n\n  return <div>\n    <div>{loaded || props.loading || 'loading comments...'}</div>\n    <section\n      className={props.className}\n      style={props.style}\n      ref={elem => {\n        if (!elem) return\n        if (elem.children.length > 0) return\n\n        setLoaded(false)\n        new ResizeObserver((es, ob) => {\n          for (let e of es) {\n            if (e.contentRect.height > 0) {\n              setLoaded(true)\n              ob.disconnect()\n              return\n            }\n          }\n        }).observe(elem)\n\n        const scriptElem = document.createElement(\"script\");\n        scriptElem.src = \"https://utteranc.es/client.js\";\n        scriptElem.async = true;\n        scriptElem.crossOrigin = \"anonymous\";\n        // TODO: extract repo config\n        scriptElem.setAttribute(\"repo\", \"ccat3z/blog.ccat3z.xyz\");\n        scriptElem.setAttribute(\"issue-term\", props.term);\n        scriptElem.setAttribute(\"label\", \"blog comment\");\n        scriptElem.setAttribute(\"theme\", \"github-light\");\n        elem.appendChild(scriptElem);\n      }}\n    />\n  </div>\n};","import React, { useMemo } from 'react'\nimport { registerPageType } from '@/PageDispatcher'\nimport { useBlogData } from '@/BlogData'\nimport Raw from '@/components/RawElement'\nimport { UtterancesComments as Comments } from '@/components/Comment'\nimport { BlogData } from '@/utils'\nimport { extractPostInfo } from './PostsList'\nimport './Post.scss'\nimport { useHistory } from 'react-router-dom'\n\nfunction parsePostContent(e: Element) {\n  const postInfoElement = e.querySelector('.post-info')\n  if (!postInfoElement) return\n  const postInfo = extractPostInfo(postInfoElement)\n  if (!postInfo) return\n  const contentElement = e.querySelector('.content')\n  if (!contentElement) return\n  \n  return {\n    postInfo,\n    content: contentElement\n  }\n}\n\nfunction PostPage(props: {\n  data: BlogData & {\n    type: 'post'\n    content: Element\n  }\n}) {\n  const post = useMemo(() => parsePostContent(props.data.content), [props.data.content])\n  const { push: goTo } = useHistory()\n  if (!post) return <></>\n\n  return (\n    <div className=\"post-page\">\n      <pre className=\"post-info-box highlight\">\n        <code>\n          <span className=\"nn\">---</span><br />\n          <span className=\"na\">title</span><span className=\"pi\">:</span> <span className=\"s\">{post.postInfo.title}</span><br />\n          <span className=\"na\">date</span><span className=\"pi\">:</span> <span className=\"s\">{post.postInfo.date}</span><br />\n          <span className=\"na\">description</span><span className=\"pi\">:</span> <span className=\"pi\">|-</span><br />\n          <span style={{\n            width: '100%',\n            display: 'inline-flex',\n            flexDirection: 'row'\n          }}>\n            <span>{`  `}</span><span className=\"s\" style={{\n              display: 'inline-block'\n            }}>\n              {post.postInfo.abstract}\n            </span>\n          </span><br />\n          <span className=\"na\">tags</span><span className=\"pi\">:</span> <span className=\"pi\">[</span>\n          {post.postInfo.tags.map((t, i, { length }) => (\n            <React.Fragment key={t.href}>\n              <a className=\"tag sx\" href={t.href}\n                onClick={(e) => {\n                  e.stopPropagation()\n                  e.preventDefault()\n                  goTo(t.href)\n                }}\n              >{t.name}</a>\n              { i !== length - 1 && <span className=\"pi\">, </span> }\n            </React.Fragment>\n          ))}\n          <span className=\"pi\">]</span><br />\n        </code>\n      </pre>\n      <Raw className=\"post-content\" element={post.content} />\n      <hr className=\"footer-line\" />\n      <Comments className=\"comments\" term={`Comment: ${post.postInfo.id}`} />\n    </div>\n  )\n}\n\nconst _postPage = () => {\n  const data = useBlogData()\n  if (data.type === 'post' && data.content !== undefined) {\n    return <PostPage data={{\n      ...data,\n      type: data.type,\n      content: data.content\n    }} />\n  }\n  return <></>\n}\n\nregisterPageType({\n  type: 'post',\n  component: _postPage\n})","import React from 'react'\nimport {\n  BrowserRouter as Router,\n} from 'react-router-dom'\nimport './App.scss';\n\nimport PageDispatcher from './PageDispatcher'\nimport BlogData from './BlogData'\nimport Root from './components/Root'\n\nimport './pages/Splash'\nimport './pages/Home'\nimport './pages/PostsList'\nimport './pages/Message'\nimport './pages/Post'\n\nif (process.env.NODE_ENV === 'development') {\n  require(\"./pages/Debug\")\n} else {\n  require(\"./pages/WIP\")\n}\n\nfunction App() {\n  return (\n    <Router>\n      <BlogData>\n        <Root>\n          <PageDispatcher />\n        </Root>\n      </BlogData>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('blog')\n);\n\nlet bd = document.getElementById('blog-data')\nif (bd) {\n  bd.style.display = 'none'\n}"],"sourceRoot":""}